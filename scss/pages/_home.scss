$configs: (
	chart-three: (
		svgSize: 100px,
		percentage: 75,
		strokeWidth: 10px,
		backgroundColor: #305556,
		womenColor: #389967,
		menColor: #d0f09e,
		labelColor: black,
		labelFontSize: 1.5rem,
		duration: 2s,
		animationDelay: 1s
	)
);

/* ------- DO NOT EDIT BELOW --------- */
$pi: 3.14;
$labelData: '';
@for $i from 0 to 101 {
	$labelData: $labelData + $i + '%' + '\a';
}

@each $chart, $param in $configs {

	$c: (map-get($param, svgSize) - map-get($param, strokeWidth)) * $pi;
	$cOffSet: (map-get($param, percentage)/100)*$c;

	.#{$chart} {
		width: map-get($param, svgSize);
		height: map-get($param, svgSize);
		margin: 0;
		position: relative;

		&.animate {
			svg .circle-women {
				animation: offset map-get($param, duration) ease-in-out forwards;
				animation-delay: map-get($param, animationDelay);
			}

			figcaption:after {
				animation: #{$chart}-label map-get($param, duration) steps(map-get($param, percentage)) forwards;
				animation-delay: map-get($param, animationDelay);
			}
		}

		svg {
			width: 100%;
			height: 100%;
			.circle-background {
				r: (map-get($param, svgSize) - map-get($param, strokeWidth))/2;
				cx: 50%;
				cy: 50%;
				fill: none;
				stroke: map-get($param, backgroundColor);
				stroke-width: map-get($param, strokeWidth);
			}
			.circle-women {
				@extend .circle-background;
				stroke: map-get($param, womenColor);
				stroke-dasharray: $cOffSet $c;
				stroke-dashoffset: $cOffSet;
				stroke-linecap: round;
				transform-origin: 50% 50%;
				transform: rotate(-90deg);
			}
			.circle-men {
				@extend .circle-background;
				stroke: map-get($param, menColor);
				stroke-dasharray: $cOffSet $c;
				stroke-dashoffset: $cOffSet;
				stroke-linecap: round;
				transform-origin: 50% 50%;
				transform: rotate(-90deg);
			}
		}
		figcaption {
			display: inline-block;
			width: 100%;
			height: map-get($param, labelFontSize);
			overflow: hidden;
			text-align: center;
			color: map-get($param, labelColor);
			position: absolute;
			top: calc(50% - #{map-get($param, labelFontSize)/2});
			left: 0;
			font-size: 0;
			&:after {
				display: inline-block;
				content: $labelData;
				white-space: pre;
				font-size: map-get($param, labelFontSize);
				line-height: map-get($param, labelFontSize);
			}
		}
	}
	@keyframes #{$chart}-label {
		100% {
			transform: translateY(map-get($param, labelFontSize) * (-(map-get($param, percentage))));
		}
	}
}
@keyframes offset {
	100% {
		stroke-dashoffset: 0;
	}
}




//False Myths
.marketing .col-lg-4 .statistics h3{
  margin-bottom: 1.5rem;
  text-align: center;
}

.marketing h2 {
  font-weight: 400;
  padding: 3%;
}

.marketing .col-lg-4 p {
  margin-right: .75rem;
  margin-left: .75rem;
}

.myths {
  margin-top: $mrg-top-sct-mv;
  @media all and (min-width: 600px){
    margin-top: $mrg-top-sct-tb;
  }
  @media all and (min-width: 1025px){
    margin-top: $mrg-top-sct-dk;
  }
}
